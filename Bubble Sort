#include <iostream>
#include <chrono> 
#include <algorithm> 
using namespace std;
using namespace chrono;

void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n-1; i++) {
        for (int j = 0; j < n-i-1; j++) {
            if (arr[j] > arr[j+1]) {
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }
    }
}

void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++)
        cout << arr[i] << " ";
    cout << endl;
}

void fillRandom(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 10000;
    }
}

void fillReverseSorted(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = size - i;
    }
}

void fillSorted(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = i + 1;
    }
}


int main() {
    const int n = 10; //n=100, n=500, n=1000, n=10000
    int arr[n];
    int arrCopy[n];

    fillRandom(arr, n);
    cout << "Data Acak: ";
    //cout << "Data Berurut Terbalik: ";
    //cout << "Data Terurut: ";
    printArray(arr, n);

    copy(arr, arr + n, arrCopy);
    auto start = high_resolution_clock::now();
    bubbleSort(arrCopy, n);
    auto stop = high_resolution_clock::now();
    auto duration = duration_cast<microseconds>(stop - start);
    cout << "Time taken by Bubble Sort: " << duration.count() << " microseconds" << endl;

    return 0;
}
